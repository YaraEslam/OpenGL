// ass1.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include "pch.h"
#include <iostream>
#include <iostream>
#include <stdlib.h> //Needed for "exit" function

  //Include OpenGL header files, so that we can use OpenGL
#ifdef __APPLE__
#include <OpenGL/OpenGL.h>
#include <GLUT/glut.h>
#else
#include <GL/glut.h>
#endif

using namespace std;


//Called when the window is resized
void handleResize(int w, int h) {
	//Tell OpenGL how to convert from coordinates to pixel values
	glViewport(0, 0, w, h);

	glMatrixMode(GL_PROJECTION); //Switch to setting the camera perspective

	//Set the camera perspective
	glLoadIdentity(); //Reset the camera
	gluPerspective(45.0,                  //The camera angle
		(double)w / (double)h, //The width-to-height ratio
		1.0,                   //The near z clipping coordinate
		200.0);                //The far z clipping coordinate
}

//Draws the 3D scene
void drawScene() {
	//Clear information from last draw
	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);

	glMatrixMode(GL_MODELVIEW); //Switch to the drawing perspective
	glLoadIdentity(); //Reset the drawing perspective

	glBegin(GL_TRIANGLES); 
	
	//Pentagon
	glVertex3f(-0.5f, 1.0f, -5.0f);
	glVertex3f(-0.75f, 0.5f, -5.0f);
	glVertex3f(-1.25f, 0.5f, -5.0f);

	glVertex3f(-1.5f, 1.0f, -5.0f);
	glVertex3f(-1.25f,0.5f, -5.0f);
	glVertex3f(-0.5f, 1.0f, -5.0f);
	
	glVertex3f(-0.5f, 1.0f, -5.0f);
	glVertex3f(-1.5f, 1.0f, -5.0f);
	glVertex3f(-1.0f, 1.5f, -5.0f);


	//Hexagon
	glVertex3f(0.5f, 1.0f, -5.0f);
	glVertex3f(1.0f, 0.5f, -5.0f);
	glVertex3f(1.0f, 1.5f, -5.0f);

	glVertex3f(1.0f, 0.5f, -5.0f);
	glVertex3f(1.0f, 1.5f, -5.0f);
	glVertex3f(1.5f, 1.5f, -5.0f);

	glVertex3f(1.0f, 0.5f, -5.0f);
	glVertex3f(1.5f, 0.5f, -5.0f);
	glVertex3f(1.5f, 1.5f, -5.0f);

	glVertex3f(2.0f, 1.0f, -5.0f);
	glVertex3f(1.5f, 0.5f, -5.0f);
	glVertex3f(1.5f, 1.5f, -5.0f);

	//Heptagon
	glVertex3f(-0.4f, -0.5f, -5.0f);
	glVertex3f(-1.0f, -0.2f, -5.0f);
	glVertex3f(-1.6f, -0.5f, -5.0f);

	glVertex3f(-0.4f, -0.5f, -5.0f);
	glVertex3f(-0.2f, -1.0f, -5.0f);
	glVertex3f(-0.6f, -1.5f, -5.0f);

	glVertex3f(-1.6f, -0.5f, -5.0f);
	glVertex3f(-1.8f, -1.0f, -5.0f);
	glVertex3f(-1.4f, -1.5f, -5.0f);

	glVertex3f(-0.4f, -0.5f, -5.0f);
	glVertex3f(-0.6f, -1.5f, -5.0f);
	glVertex3f(-1.4f, -1.5f, -5.0f);

	glVertex3f(-0.4f, -0.5f, -5.0f);
	glVertex3f(-1.6f, -0.5f, -5.0f);
	glVertex3f(-1.4f, -1.5f, -5.0f);

	//Octagon
	glVertex3f(0.5f, -0.5f, -5.0f);
	glVertex3f(1.0f, -0.0f, -5.0f);
	glVertex3f(1.0f, -0.5f, -5.0f);

	glVertex3f(1.5f, -0.0f, -5.0f);
	glVertex3f(1.0f, -0.0f, -5.0f);
	glVertex3f(1.0f, -0.5f, -5.0f);

	glVertex3f(1.5f, -0.5f, -5.0f);
	glVertex3f(1.5f, -0.0f, -5.0f);
	glVertex3f(1.0f, -0.5f, -5.0f);

	glVertex3f(1.5f, -0.5f, -5.0f);
	glVertex3f(1.5f, -0.0f, -5.0f);
	glVertex3f(2.0f, -0.5f, -5.0f);

	glVertex3f(0.5f, -0.5f, -5.0f);
	glVertex3f(0.5f, -1.0f, -5.0f);
	glVertex3f(2.0f, -0.5f, -5.0f);

	glVertex3f(0.5f, -1.0f, -5.0f);
	glVertex3f(2.0f, -1.0f, -5.0f);
	glVertex3f(2.0f, -0.5f, -5.0f);

	glVertex3f(0.5f, -1.0f, -5.0f);
	glVertex3f(1.0f, -1.0f, -5.0f);
	glVertex3f(1.0f, -1.5f, -5.0f);

	glVertex3f(1.5f, -1.0f, -5.0f);
	glVertex3f(1.0f, -1.0f, -5.0f);
	glVertex3f(1.0f, -1.5f, -5.0f);

	glVertex3f(1.5f, -1.5f, -5.0f);
	glVertex3f(1.5f, -1.0f, -5.0f);
	glVertex3f(1.0f, -1.5f, -5.0f);

	glVertex3f(2.0f, -1.0f, -5.0f);
	glVertex3f(1.5f, -1.0f, -5.0f);
	glVertex3f(1.5f, -1.5f, -5.0f);

	glEnd(); 
	glutSwapBuffers(); //Send the 3D scene to the screen
}

int main(int argc, char** argv) {
	//Initialize GLUT
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH);
	glutInitWindowSize(700, 700); 

	glutCreateWindow("Pentagon , hexagon , heptagon and octagon Shapes");

	glutDisplayFunc(drawScene);
	glutReshapeFunc(handleResize);

	glutMainLoop(); 
	return 0; 
}